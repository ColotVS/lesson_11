public class lesson_11_29 {
    //Контракты в коде

    //Описанное выше поведение должны реализовывать все классы в Java.
    //Проверить правильность сравнения объектов на уровне компиляции никак нельзя.
    //Все Java-программисты договорились, что если они пишут свою реализацию метода equals() вместо стандартной (из класса Object),
    //они также должны написать свою реализацию метода hashCode(), чтобы озвученные выше правила сохранялись.
    //Такая договоренность называется контрактом.
    //Если вы добавляете в свой класс только реализацию одного метода equals() или только hashCode(),
    //вы грубо нарушаете контракт (нарушаете договоренность). Так делать нельзя.
    //Если другие программисты будут использовать ваш код, он может работать неправильно.
    //Более того, вы тоже будете использовать код, который работает на основе вышеозвученных контрактов.

    //Все коллекции в Java при поиске элемента внутри коллекции сначала сравнивают hash-code объектов,
    //а только потом вызывают для сравнения метод equals.

    //Поэтому если вы напишете свой класс, а в нем новую функцию equals, но не напишете метод hashCode() или реализуете его с ошибками,
    //коллекции могут неправильно работать с вашими объектами.
    //Например, вы добавили объект в список, затем ищете его с помощью метода contains(), а коллекция ваш объект не находит.
}
